{"ast":null,"code":"/**\r\n * @description - Ranks ordering according to issued date and then order number.\r\n * @param ranks - Ranks Array.\r\n * @returns - Return Ordered ranks.\r\n */\nexport function orderRanks(ranks) {\n  return [...JSON.parse(JSON.stringify(ranks))].sort((a, b) => {\n    var _a$martialArt, _b$martialArt;\n\n    const date1 = b.graduated ? new Date(b.graduated) : 0;\n    const date2 = a.graduated ? new Date(a.graduated) : 0;\n\n    if (a !== null && a !== void 0 && (_a$martialArt = a.martialArt) !== null && _a$martialArt !== void 0 && _a$martialArt.order && b !== null && b !== void 0 && (_b$martialArt = b.martialArt) !== null && _b$martialArt !== void 0 && _b$martialArt.order && date1 === 0 && date2 === 0) {\n      return b.martialArt.order - a.martialArt.order;\n    }\n\n    return +date1 - +date2;\n  });\n}","map":{"version":3,"sources":["C:/Users/Public.DESKTOP-5K819ES/Documents/GitHub/dojoplus/src/shared/utils/ranks-utils.ts"],"names":["orderRanks","ranks","JSON","parse","stringify","sort","a","b","date1","graduated","Date","date2","martialArt","order"],"mappings":"AAEA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASA,UAAT,CAAoBC,KAApB,EAA+D;AACpE,SAAO,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeH,KAAf,CAAX,CAAJ,EAAuCI,IAAvC,CAA4C,CAACC,CAAD,EAAIC,CAAJ,KAAU;AAAA;;AAC3D,UAAMC,KAAK,GAAGD,CAAC,CAACE,SAAF,GAAc,IAAIC,IAAJ,CAASH,CAAC,CAACE,SAAX,CAAd,GAAsC,CAApD;AACA,UAAME,KAAK,GAAGL,CAAC,CAACG,SAAF,GAAc,IAAIC,IAAJ,CAASJ,CAAC,CAACG,SAAX,CAAd,GAAsC,CAApD;;AACA,QACEH,CAAC,SAAD,IAAAA,CAAC,WAAD,qBAAAA,CAAC,CAAEM,UAAH,wDAAeC,KAAf,IACAN,CADA,aACAA,CADA,gCACAA,CAAC,CAAEK,UADH,0CACA,cAAeC,KADf,IAEAL,KAAK,KAAK,CAFV,IAGAG,KAAK,KAAK,CAJZ,EAKE;AACA,aAAOJ,CAAC,CAACK,UAAF,CAAaC,KAAb,GAAqBP,CAAC,CAACM,UAAF,CAAaC,KAAzC;AACD;;AACD,WAAO,CAACL,KAAD,GAAS,CAACG,KAAjB;AACD,GAZM,CAAP;AAaD","sourcesContent":["import { IRank, Rank } from '../models/Rank.model';\r\n\r\n/**\r\n * @description - Ranks ordering according to issued date and then order number.\r\n * @param ranks - Ranks Array.\r\n * @returns - Return Ordered ranks.\r\n */\r\nexport function orderRanks(ranks: Rank[] | IRank[]): Rank[] | IRank[] {\r\n  return [...JSON.parse(JSON.stringify(ranks))].sort((a, b) => {\r\n    const date1 = b.graduated ? new Date(b.graduated) : 0;\r\n    const date2 = a.graduated ? new Date(a.graduated) : 0;\r\n    if (\r\n      a?.martialArt?.order &&\r\n      b?.martialArt?.order &&\r\n      date1 === 0 &&\r\n      date2 === 0\r\n    ) {\r\n      return b.martialArt.order - a.martialArt.order;\r\n    }\r\n    return +date1 - +date2;\r\n  });\r\n}\r\n"]},"metadata":{},"sourceType":"module"}