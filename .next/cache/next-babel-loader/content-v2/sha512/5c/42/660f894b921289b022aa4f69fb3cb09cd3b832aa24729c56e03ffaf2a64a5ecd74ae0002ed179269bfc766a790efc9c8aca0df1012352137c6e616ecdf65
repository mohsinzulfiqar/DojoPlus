{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport _ from 'lodash';\nimport TimetableService from '../../../../services/TimetableService';\n/**\r\n * @description - get Profile after send page to browser.\r\n * @param req - Req.\r\n * @param res - Res.\r\n * @returns - Return user profile basic data like username and avatar.\r\n */\n// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\n\nasync function Timetable(req, res) {\n  if (req.method === 'GET') {\n    try {\n      var _req$query;\n\n      const data = await TimetableService.getTimetable(typeof req.query.schoolId === 'string' ? req.query.schoolId : (_req$query = req.query) === null || _req$query === void 0 ? void 0 : _req$query.schoolId[0]);\n\n      const schoolFormatData = _.mapKeys(data.fields, (v, k) => _.camelCase(k));\n\n      const scheduleSchoolFormatData = data.scheduleSchool.map(rank => _.mapKeys(rank.fields, (v, k) => _.camelCase(k)));\n      const plansFormatData = data.plans.map(rank => _.mapKeys(rank.fields, (v, k) => _.camelCase(k)));\n      res.send(_objectSpread(_objectSpread({}, schoolFormatData), {}, {\n        scheduleSchool: scheduleSchoolFormatData,\n        plans: plansFormatData\n      }));\n    } catch (error) {\n      console.log(error);\n      res.status(504).json({\n        message: 'Server Error'\n      });\n    }\n  } else {// Handle any other HTTP method\n  }\n}\n\nexport default Timetable;","map":null,"metadata":{},"sourceType":"module"}