{"ast":null,"code":"import { createAction } from '@cobuildlab/react-simple-state';\nimport { client } from '../apollo/client';\nimport { GetProfileGroupsDocument } from '../../shared/types/generated';\nimport { GroupsStore, ErrorGetGroups } from './groups-store';\n/**\r\n * @description - get Profile after send page to browser.\r\n * @param profileId - Username.\r\n * @returns - Return user profile basic data like username and avatar.\r\n */\n\nexport const getProfileGroups = createAction(GroupsStore, ErrorGetGroups, async profileId => {\n  try {\n    const response = await client.query({\n      query: GetProfileGroupsDocument,\n      variables: {\n        profileId\n      }\n    });\n    return response.data;\n  } catch (error) {\n    throw new Error(error);\n  }\n});","map":{"version":3,"sources":["C:/Users/Public.DESKTOP-5K819ES/Documents/GitHub/dojoplus/src/modules/groups/groups-actions.ts"],"names":["createAction","client","GetProfileGroupsDocument","GroupsStore","ErrorGetGroups","getProfileGroups","profileId","response","query","variables","data","error","Error"],"mappings":"AAAA,SAASA,YAAT,QAA6B,gCAA7B;AACA,SAASC,MAAT,QAAuB,kBAAvB;AAEA,SAEEC,wBAFF,QAGO,8BAHP;AAKA,SAASC,WAAT,EAAsBC,cAAtB,QAA4C,gBAA5C;AAEA;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMC,gBAAgB,GAAGL,YAAY,CAC1CG,WAD0C,EAE1CC,cAF0C,EAG1C,MAAOE,SAAP,IAAiE;AAC/D,MAAI;AACF,UAAMC,QAAQ,GAAG,MAAMN,MAAM,CAACO,KAAP,CAAa;AAClCA,MAAAA,KAAK,EAAEN,wBAD2B;AAElCO,MAAAA,SAAS,EAAE;AACTH,QAAAA;AADS;AAFuB,KAAb,CAAvB;AAMA,WAAOC,QAAQ,CAACG,IAAhB;AACD,GARD,CAQE,OAAOC,KAAP,EAAc;AACd,UAAM,IAAIC,KAAJ,CAAUD,KAAV,CAAN;AACD;AACF,CAfyC,CAArC","sourcesContent":["import { createAction } from '@cobuildlab/react-simple-state';\r\nimport { client } from '../apollo/client';\r\n\r\nimport {\r\n  GetProfileGroupsQuery as GetProfileGroupsQueryType,\r\n  GetProfileGroupsDocument,\r\n} from '../../shared/types/generated';\r\n\r\nimport { GroupsStore, ErrorGetGroups } from './groups-store';\r\n\r\n/**\r\n * @description - get Profile after send page to browser.\r\n * @param profileId - Username.\r\n * @returns - Return user profile basic data like username and avatar.\r\n */\r\nexport const getProfileGroups = createAction(\r\n  GroupsStore,\r\n  ErrorGetGroups,\r\n  async (profileId: string): Promise<GetProfileGroupsQueryType> => {\r\n    try {\r\n      const response = await client.query({\r\n        query: GetProfileGroupsDocument,\r\n        variables: {\r\n          profileId,\r\n        },\r\n      });\r\n      return response.data;\r\n    } catch (error) {\r\n      throw new Error(error);\r\n    }\r\n  },\r\n);\r\n"]},"metadata":{},"sourceType":"module"}