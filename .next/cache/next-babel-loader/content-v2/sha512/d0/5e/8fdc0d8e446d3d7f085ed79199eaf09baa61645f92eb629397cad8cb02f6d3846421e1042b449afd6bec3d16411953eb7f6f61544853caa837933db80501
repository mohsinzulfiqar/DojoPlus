{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React from 'react';\nimport Head from 'next/head';\nimport { useTranslation } from 'react-i18next';\nimport { Section } from '../../../shared/components/layout/Section';\nimport { MainProfile, MainSchool } from '../../../shared/components/layout/Main';\nimport { PrivateClass } from '../../../modules/private-class/PrivateClass';\nimport http from '../../../../services/http';\nimport { GoogleManagerNoScript, GoogleManagerScript } from '../../../shared/components/SchoolScripts';\nimport { EmptyViewAlert } from '../../../shared/components/EmptyViewAlert';\nimport { Container } from '../../../shared/components/layout/Container';\n\nconst PrivateClassView = ({\n  data\n}) => {\n  const {\n    t\n  } = useTranslation();\n  const textPrivateClass = t('PrivateClass');\n\n  if (!data || data && data.classesList.length === 0) {\n    return /*#__PURE__*/_jsxs(_Fragment, {\n      children: [/*#__PURE__*/_jsx(Head, {\n        children: /*#__PURE__*/_jsx(GoogleManagerScript, {})\n      }), /*#__PURE__*/_jsxs(Section, {\n        children: [/*#__PURE__*/_jsx(GoogleManagerNoScript, {}), /*#__PURE__*/_jsx(MainSchool, {\n          children: /*#__PURE__*/_jsx(Container, {\n            isFlexGrow: true,\n            children: /*#__PURE__*/_jsx(EmptyViewAlert, {\n              msg: \"NO PRIVATE CLASSES FOUND\"\n            })\n          })\n        })]\n      })]\n    });\n  }\n\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsxs(Head, {\n      children: [/*#__PURE__*/_jsx(GoogleManagerScript, {}), /*#__PURE__*/_jsx(\"title\", {\n        children: `${data.profile.displayName} ${textPrivateClass} Â· DOJO+`\n      })]\n    }), /*#__PURE__*/_jsxs(Section, {\n      children: [/*#__PURE__*/_jsx(GoogleManagerNoScript, {}), /*#__PURE__*/_jsx(MainProfile, {\n        children: data && /*#__PURE__*/_jsx(PrivateClass, {\n          data: data\n        })\n      })]\n    })]\n  });\n};\n\nexport const getServerSideProps = async context => {\n  var _context$query;\n\n  const username = (_context$query = context.query) === null || _context$query === void 0 ? void 0 : _context$query.username;\n\n  if (typeof username === 'string') {\n    try {\n      const baseUrl = `${false ? 'http' : 'https'}://${context.req.headers.host}/api/`;\n      const response = await http.get(`${baseUrl}PrivateClasses`, {\n        params: {\n          username,\n          detailed: true\n        }\n      });\n      return {\n        props: {\n          data: response.data\n        }\n      };\n    } catch (error) {\n      return {\n        props: {\n          data: null\n        }\n      };\n    }\n  }\n\n  return {\n    props: {\n      data: null\n    }\n  };\n};\nexport default PrivateClassView;","map":null,"metadata":{},"sourceType":"module"}