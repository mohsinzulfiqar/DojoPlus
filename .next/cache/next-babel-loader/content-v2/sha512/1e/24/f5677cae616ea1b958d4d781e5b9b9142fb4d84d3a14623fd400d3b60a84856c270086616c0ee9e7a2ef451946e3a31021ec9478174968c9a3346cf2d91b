{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/Public.DESKTOP-5K819ES/Documents/GitHub/dojoplus/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/Public.DESKTOP-5K819ES/Documents/GitHub/dojoplus/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\n/**\r\n * @description - get Profile after send page to browser.\r\n * @param url - Req.\r\n * @returns - Return user profile basic data like username and avatar.\r\n */\nfunction fetchGetJSON(_x) {\n  return _fetchGetJSON.apply(this, arguments);\n}\n/**\r\n * @description - get Profile after send page to browser.\r\n * @param url - Req.\r\n * @param data - Res.\r\n * @returns - Return user profile basic data like username and avatar.\r\n */\n\n\nfunction _fetchGetJSON() {\n  _fetchGetJSON = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(url) {\n    var data;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return fetch(url).then(function (res) {\n              return res.json();\n            });\n\n          case 3:\n            data = _context.sent;\n            return _context.abrupt(\"return\", data);\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n            throw new Error(_context.t0.message);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 7]]);\n  }));\n  return _fetchGetJSON.apply(this, arguments);\n}\n\nfunction fetchPostJSON(_x2, _x3) {\n  return _fetchPostJSON.apply(this, arguments);\n}\n\nfunction _fetchPostJSON() {\n  _fetchPostJSON = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(url, data) {\n    var response;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return fetch(url, {\n              method: 'POST',\n              // *GET, POST, PUT, DELETE, etc.\n              mode: 'cors',\n              // no-cors, *cors, same-origin\n              cache: 'no-cache',\n              // *default, no-cache, reload, force-cache, only-if-cached\n              credentials: 'same-origin',\n              // include, *same-origin, omit\n              headers: {\n                'Content-Type': 'application/json' // 'Content-Type': 'application/x-www-form-urlencoded',\n\n              },\n              redirect: 'follow',\n              // manual, *follow, error\n              referrerPolicy: 'no-referrer',\n              // no-referrer, *client\n              body: JSON.stringify(data || {}) // body data type must match \"Content-Type\" header\n\n            });\n\n          case 3:\n            response = _context2.sent;\n            _context2.next = 6;\n            return response.json();\n\n          case 6:\n            return _context2.abrupt(\"return\", _context2.sent);\n\n          case 9:\n            _context2.prev = 9;\n            _context2.t0 = _context2[\"catch\"](0);\n            throw new Error(_context2.t0.message);\n\n          case 12:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[0, 9]]);\n  }));\n  return _fetchPostJSON.apply(this, arguments);\n}\n\nexport { fetchGetJSON, fetchPostJSON };","map":null,"metadata":{},"sourceType":"module"}