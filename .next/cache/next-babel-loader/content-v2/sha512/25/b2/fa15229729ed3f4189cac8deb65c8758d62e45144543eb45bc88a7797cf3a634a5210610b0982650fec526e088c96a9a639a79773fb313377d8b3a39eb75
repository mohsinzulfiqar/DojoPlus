{"ast":null,"code":"import axios from 'axios';\nexport const customHeaders = () => {\n  return {\n    Accept: 'application/json'\n  };\n};\nconst http = axios.create({\n  headers: customHeaders()\n}); // Add a request interceptor\n\nhttp.interceptors.request.use(function (config) {\n  // Do something before request is sent\n  return config;\n}, function (error) {\n  console.log('ðŸ”º', error); // Do something with request error\n\n  return Promise.reject(error);\n}); // Add a response interceptor\n\nhttp.interceptors.response.use(function (response) {\n  // Any status code that lie within the range of 2xx cause this function to trigger\n  // Do something with response data\n  return response;\n}, function (error) {\n  console.log('ðŸ”º', error.message); // \":\"Network Error\"\n  // Any status codes that falls outside the range of 2xx cause this function to trigger\n  // Do something with response error\n  // return Promise.reject(error)\n\n  return Promise.reject(error);\n});\nexport default http;","map":{"version":3,"sources":["C:/Users/Public.DESKTOP-5K819ES/Documents/GitHub/dojoplus/services/http.ts"],"names":["axios","customHeaders","Accept","http","create","headers","interceptors","request","use","config","error","console","log","Promise","reject","response","message"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,aAAuC,GAAG,MAAM;AAC3D,SAAO;AACLC,IAAAA,MAAM,EAAE;AADH,GAAP;AAGD,CAJM;AAMP,MAAMC,IAAI,GAAGH,KAAK,CAACI,MAAN,CAAa;AACxBC,EAAAA,OAAO,EAAEJ,aAAa;AADE,CAAb,CAAb,C,CAIA;;AACAE,IAAI,CAACG,YAAL,CAAkBC,OAAlB,CAA0BC,GAA1B,CACE,UAAUC,MAAV,EAAkB;AAChB;AACA,SAAOA,MAAP;AACD,CAJH,EAKE,UAAUC,KAAV,EAAiB;AACfC,EAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ,EAAkBF,KAAlB,EADe,CAEf;;AACA,SAAOG,OAAO,CAACC,MAAR,CAAeJ,KAAf,CAAP;AACD,CATH,E,CAYA;;AACAP,IAAI,CAACG,YAAL,CAAkBS,QAAlB,CAA2BP,GAA3B,CACE,UAAUO,QAAV,EAAoB;AAClB;AACA;AACA,SAAOA,QAAP;AACD,CALH,EAME,UAAUL,KAAV,EAAiB;AACfC,EAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ,EAAkBF,KAAK,CAACM,OAAxB,EADe,CAEf;AACA;AACA;AACA;;AACA,SAAOH,OAAO,CAACC,MAAR,CAAeJ,KAAf,CAAP;AACD,CAbH;AAgBA,eAAeP,IAAf","sourcesContent":["import axios from 'axios';\r\n\r\nexport const customHeaders: () => { Accept: string } = () => {\r\n  return {\r\n    Accept: 'application/json',\r\n  };\r\n};\r\n\r\nconst http = axios.create({\r\n  headers: customHeaders(),\r\n});\r\n\r\n// Add a request interceptor\r\nhttp.interceptors.request.use(\r\n  function (config) {\r\n    // Do something before request is sent\r\n    return config;\r\n  },\r\n  function (error) {\r\n    console.log('ðŸ”º', error);\r\n    // Do something with request error\r\n    return Promise.reject(error);\r\n  },\r\n);\r\n\r\n// Add a response interceptor\r\nhttp.interceptors.response.use(\r\n  function (response) {\r\n    // Any status code that lie within the range of 2xx cause this function to trigger\r\n    // Do something with response data\r\n    return response;\r\n  },\r\n  function (error) {\r\n    console.log('ðŸ”º', error.message);\r\n    // \":\"Network Error\"\r\n    // Any status codes that falls outside the range of 2xx cause this function to trigger\r\n    // Do something with response error\r\n    // return Promise.reject(error)\r\n    return Promise.reject(error);\r\n  },\r\n);\r\n\r\nexport default http;\r\n"]},"metadata":{},"sourceType":"module"}