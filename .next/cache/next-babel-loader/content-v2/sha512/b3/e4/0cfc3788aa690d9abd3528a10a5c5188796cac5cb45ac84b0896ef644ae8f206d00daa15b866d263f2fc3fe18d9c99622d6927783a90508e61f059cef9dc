{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport Head from 'next/head';\nimport * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { GoogleManagerNoScript, GoogleManagerScript } from '../../../shared/components/SchoolScripts';\nimport { Section } from '../../../shared/components/layout/Section';\nimport { Header } from '../../../shared/components/layout/header/Header';\nimport { SchoolHeader } from '../../../shared/components/layout/header/SchoolHeader';\nimport { MainSchool } from '../../../shared/components/layout/Main';\nimport { Container } from '../../../shared/components/layout/Container';\nimport { Footer } from '../../../shared/components/layout/Footer';\nimport { BottomNavigation } from '../../../shared/components/layout/navbars/BottomNavigation';\nimport Wrapper from '../../../modules/plans/components/Wrapper';\nimport http from '../../../../services/http';\n\nconst PlansView = ({\n  data\n}) => {\n  var _data$schoolLogo$;\n\n  const {\n    t\n  } = useTranslation();\n  const textPlans = t('Plans');\n  const schoolname = (data === null || data === void 0 ? void 0 : data.schoolName) || 'school name no found';\n  const schoolLogo = data !== null && data !== void 0 && data.schoolLogo ? data === null || data === void 0 ? void 0 : (_data$schoolLogo$ = data.schoolLogo[0]) === null || _data$schoolLogo$ === void 0 ? void 0 : _data$schoolLogo$.url : '/assets/logo/dojo.png';\n  const schoolPhoneType = data === null || data === void 0 ? void 0 : data.phoneType;\n  const schoolPhone = data === null || data === void 0 ? void 0 : data.phone; //  const plansCount = data?.schoolProductRelation?.count || 0;\n\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsxs(Head, {\n      children: [/*#__PURE__*/_jsx(GoogleManagerScript, {}), /*#__PURE__*/_jsx(\"title\", {\n        children: `${schoolname} ${textPlans} Â· DOJO+`\n      })]\n    }), /*#__PURE__*/_jsxs(Section, {\n      children: [/*#__PURE__*/_jsx(GoogleManagerNoScript, {}), /*#__PURE__*/_jsx(Header, {\n        children: /*#__PURE__*/_jsx(SchoolHeader, {\n          schoolName: schoolname,\n          shcoolLogo: schoolLogo\n        })\n      }), /*#__PURE__*/_jsx(MainSchool, {\n        children: /*#__PURE__*/_jsx(Container, {\n          isFlexGrow: true,\n          children: /*#__PURE__*/_jsx(Wrapper, {\n            data: data\n          })\n        })\n      }), /*#__PURE__*/_jsx(Footer, {\n        children: /*#__PURE__*/_jsx(BottomNavigation, {\n          phoneType: schoolPhoneType,\n          phoneNumber: schoolPhone,\n          plans: false\n        })\n      })]\n    })]\n  });\n}; // This can be modified in a better way, but for reasons of time reuse the logic of the schedule view\n\n\nexport const getServerSideProps = async context => {\n  var _context$query;\n\n  const schoolId = (_context$query = context.query) === null || _context$query === void 0 ? void 0 : _context$query.schoolId;\n\n  if (typeof schoolId === 'string') {\n    try {\n      const baseUrl = `${false ? 'http' : 'https'}://${context.req.headers.host}/api/`;\n      const {\n        data\n      } = await http.get(`${baseUrl}Timetable`, {\n        params: {\n          schoolId\n        }\n      });\n      return Object.entries(data).length > 1 ? {\n        props: {\n          data\n        }\n      } : {\n        notFound: true\n      };\n    } catch (error) {\n      return {\n        props: {\n          data: null\n        }\n      };\n    }\n  }\n\n  return {\n    props: {\n      data: null\n    }\n  };\n};\nexport default PlansView;","map":null,"metadata":{},"sourceType":"module"}