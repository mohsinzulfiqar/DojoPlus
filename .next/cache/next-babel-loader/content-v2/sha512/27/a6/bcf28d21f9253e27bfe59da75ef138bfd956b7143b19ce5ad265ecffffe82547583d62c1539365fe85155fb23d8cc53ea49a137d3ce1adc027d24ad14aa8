{"ast":null,"code":"import _ from 'lodash';\nimport VideoService from '../../../../services/VideoService';\n/**\r\n * @description - get Profile after send page to browser.\r\n * @param req - Req.\r\n * @param res - Res.\r\n * @returns - Return user profile basic data like username and avatar.\r\n */\n// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\n\nasync function Video(req, res) {\n  if (req.method === 'GET') {\n    try {\n      var _req$query;\n\n      const data = await VideoService.getVideo(typeof req.query.username === 'string' ? req.query.username : (_req$query = req.query) === null || _req$query === void 0 ? void 0 : _req$query.username[0]);\n      const formatData = data.map(rank => _.mapKeys(rank.fields, (v, k) => _.camelCase(k)));\n      res.send(formatData);\n    } catch (error) {\n      console.log(error);\n      res.status(504).json({\n        message: 'Server Error'\n      });\n    }\n  } else {// Handle any other HTTP method\n  }\n}\n\nexport default Video;","map":{"version":3,"sources":["C:/Users/Public.DESKTOP-5K819ES/Documents/GitHub/dojoplus/src/pages/api/Video/index.ts"],"names":["_","VideoService","Video","req","res","method","data","getVideo","query","username","formatData","map","rank","mapKeys","fields","v","k","camelCase","send","error","console","log","status","json","message"],"mappings":"AACA,OAAOA,CAAP,MAAc,QAAd;AACA,OAAOC,YAAP,MAAyB,mCAAzB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAeC,KAAf,CAAqBC,GAArB,EAA0CC,GAA1C,EAAgE;AAC9D,MAAID,GAAG,CAACE,MAAJ,KAAe,KAAnB,EAA0B;AACxB,QAAI;AAAA;;AACF,YAAMC,IAAI,GAAG,MAAML,YAAY,CAACM,QAAb,CACjB,OAAOJ,GAAG,CAACK,KAAJ,CAAUC,QAAjB,KAA8B,QAA9B,GACIN,GAAG,CAACK,KAAJ,CAAUC,QADd,iBAEIN,GAAG,CAACK,KAFR,+CAEI,WAAWC,QAAX,CAAoB,CAApB,CAHa,CAAnB;AAKA,YAAMC,UAAU,GAAGJ,IAAI,CAACK,GAAL,CAAUC,IAAD,IAC1BZ,CAAC,CAACa,OAAF,CAAUD,IAAI,CAACE,MAAf,EAAuB,CAACC,CAAD,EAAIC,CAAJ,KAAUhB,CAAC,CAACiB,SAAF,CAAYD,CAAZ,CAAjC,CADiB,CAAnB;AAGAZ,MAAAA,GAAG,CAACc,IAAJ,CAASR,UAAT;AACD,KAVD,CAUE,OAAOS,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACAf,MAAAA,GAAG,CAACkB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAArB;AACD;AACF,GAfD,MAeO,CACL;AACD;AACF;;AAED,eAAetB,KAAf","sourcesContent":["import type { NextApiRequest, NextApiResponse } from 'next';\r\nimport _ from 'lodash';\r\nimport VideoService from '../../../../services/VideoService';\r\n\r\n/**\r\n * @description - get Profile after send page to browser.\r\n * @param req - Req.\r\n * @param res - Res.\r\n * @returns - Return user profile basic data like username and avatar.\r\n */\r\n// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\r\nasync function Video(req: NextApiRequest, res: NextApiResponse) {\r\n  if (req.method === 'GET') {\r\n    try {\r\n      const data = await VideoService.getVideo(\r\n        typeof req.query.username === 'string'\r\n          ? req.query.username\r\n          : req.query?.username[0],\r\n      );\r\n      const formatData = data.map((rank) =>\r\n        _.mapKeys(rank.fields, (v, k) => _.camelCase(k)),\r\n      );\r\n      res.send(formatData);\r\n    } catch (error) {\r\n      console.log(error);\r\n      res.status(504).json({ message: 'Server Error' });\r\n    }\r\n  } else {\r\n    // Handle any other HTTP method\r\n  }\r\n}\r\n\r\nexport default Video;\r\n"]},"metadata":{},"sourceType":"module"}