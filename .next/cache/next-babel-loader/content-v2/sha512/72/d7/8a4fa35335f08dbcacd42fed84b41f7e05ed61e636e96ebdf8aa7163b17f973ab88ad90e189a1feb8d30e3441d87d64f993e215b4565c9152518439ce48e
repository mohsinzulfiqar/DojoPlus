{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useState } from 'react';\nimport Map from './components/Map';\nimport Address from './components/Address';\nconst isBrowser = false;\nexport const Location = ({\n  name,\n  address,\n  city,\n  state\n}) => {\n  const {\n    0: lat,\n    1: setLat\n  } = useState(0);\n  const {\n    0: lng,\n    1: setLng\n  } = useState(0);\n  const addressComplete = `${address} ${city} ${state}`;\n\n  if (isBrowser) {\n    const geocoder = new window.google.maps.Geocoder();\n    geocoder.geocode({\n      address: addressComplete\n    }, (results, status) => {\n      if (status === google.maps.GeocoderStatus.OK) {\n        setLat(results[0].geometry.location.lat());\n        setLng(results[0].geometry.location.lng());\n      }\n    });\n  }\n\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(Map, {\n      id: \"myMap\",\n      options: {\n        fullscreenControl: false,\n        mapTypeControl: false,\n        streetViewControl: false,\n        center: {\n          lat,\n          lng\n        },\n        zoom: 17,\n        styles: []\n      },\n      onMapLoad: map => {\n        if (isBrowser) {\n          const marker = new window.google.maps.Marker({\n            position: {\n              lat,\n              lng\n            },\n            map,\n            title: name\n          });\n          return marker;\n        }\n\n        return null;\n      }\n    }), /*#__PURE__*/_jsx(Address, {\n      address: addressComplete,\n      lat: lat,\n      lng: lng\n    })]\n  });\n};","map":null,"metadata":{},"sourceType":"module"}