{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport axios from 'axios';\nimport _ from 'lodash';\nimport { ProfileTabLoading } from '../../shared/components/TabLoading';\nimport { LinkWhite24CapitalizeBold } from '../../shared/components/texts';\nimport { ProfileTabEmptyMessage } from '../../shared/components/ProfileTabEmptyMessage';\nimport { CategoryTitle, VideoCard } from './components/videos-styled';\nimport { VideoLinks } from './components/VideoLinks';\nimport { YoutubeEmbed } from './components/YoutubeEmbed';\nconst Container = styled.div.withConfig({\n  displayName: \"Videos__Container\",\n  componentId: \"sc-oawzb5-0\"\n})([\"display:flex;flex-wrap:wrap;justify-content:space-between;padding:16px;@media screen and (max-width:425px){justify-content:center;}\"]);\nexport const Videos = ({\n  username,\n  youtube,\n  profile\n}) => {\n  const {\n    0: externalVideos,\n    1: setExternalVideos\n  } = useState([]);\n  const {\n    0: youtubeVideos,\n    1: setYoutubeVideos\n  } = useState([]);\n  const {\n    0: isLoading,\n    1: setLoading\n  } = useState(true);\n  useEffect(() => {\n    if (username) {\n      var _youtube$split$;\n\n      const requests = [];\n      requests.push(axios('/api/Video', {\n        params: {\n          username\n        }\n      }).then(res => {\n        setExternalVideos(res.data);\n      }));\n      const channelId = youtube !== null && youtube !== void 0 && youtube.split('channel/') ? (_youtube$split$ = youtube.split('channel/')[1]) === null || _youtube$split$ === void 0 ? void 0 : _youtube$split$.split('?')[0] : undefined;\n\n      if (channelId) {\n        requests.push(axios('/api/Youtube', {\n          params: {\n            channelId\n          }\n        }).then(res => {\n          setYoutubeVideos(res.data);\n        }));\n      }\n\n      Promise.all(requests).then(() => setLoading(false));\n    }\n  }, [username, youtube]);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsx(ProfileTabLoading, {});\n  }\n\n  if (youtubeVideos.length === 0 && externalVideos.length === 0) {\n    return /*#__PURE__*/_jsx(ProfileTabEmptyMessage, {\n      value: \"There is no videos to show\"\n    });\n  }\n\n  const cate = externalVideos.map(item => item.platform);\n  const categories = Array.from(new Set(cate));\n  return /*#__PURE__*/_jsxs(Container, {\n    children: [youtubeVideos.length > 0 && /*#__PURE__*/_jsxs(_Fragment, {\n      children: [/*#__PURE__*/_jsx(CategoryTitle, {\n        children: /*#__PURE__*/_jsx(LinkWhite24CapitalizeBold, {\n          rel: \"nofollow\",\n          target: \"=_blank\",\n          href: `${youtube}?utm_source=DOJO+&utm_medium=Social%20Media&utm_campaign=Profile&utm_content=Videos&utm_term=DOJO+` || 'https://bjjfanatics.com/products/the-half-guard-anthology-by-lachlan-giles',\n          children: \"YouTube\"\n        })\n      }), /*#__PURE__*/_jsx(VideoCard, {\n        className: \"no-scroll-element\",\n        children: youtubeVideos.map(({\n          id,\n          snippet\n        }) => {\n          return /*#__PURE__*/_jsx(YoutubeEmbed, {\n            id: id.videoId,\n            snippet: snippet\n          }, id.videoId);\n        })\n      })]\n    }), categories.map(cat => {\n      const videos = externalVideos.filter(video => video.platform === cat);\n      return /*#__PURE__*/_jsx(VideoLinks, {\n        videos: videos,\n        category: cat,\n        url: profile ? profile[_.camelCase(cat)] : ''\n      }, cat);\n    })]\n  });\n};","map":null,"metadata":{},"sourceType":"module"}