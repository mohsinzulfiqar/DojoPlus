{"ast":null,"code":"import { useEffect, useState } from 'react'; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\nexport const useOnScreen = ref => {\n  const {\n    0: isIntersecting,\n    1: setIntersecting\n  } = useState(false);\n  useEffect(() => {\n    const observer = new IntersectionObserver(([entry]) => {\n      // console.log(entry);\n      return setIntersecting(entry.isIntersecting);\n    });\n    observer.observe(ref.current); // Remove the observer as soon as the component is unmounted\n\n    return () => {\n      observer.disconnect();\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return isIntersecting;\n};","map":{"version":3,"sources":["C:/Users/Public.DESKTOP-5K819ES/Documents/GitHub/dojoplus/src/shared/hooks/UseOnScreen.ts"],"names":["useEffect","useState","useOnScreen","ref","isIntersecting","setIntersecting","observer","IntersectionObserver","entry","observe","current","disconnect"],"mappings":"AAAA,SAA2BA,SAA3B,EAAsCC,QAAtC,QAAsD,OAAtD,C,CAEA;;AACA,OAAO,MAAMC,WAAW,GAAIC,GAAD,IAAyC;AAClE,QAAM;AAAA,OAACC,cAAD;AAAA,OAAiBC;AAAjB,MAAoCJ,QAAQ,CAAC,KAAD,CAAlD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMM,QAAQ,GAAG,IAAIC,oBAAJ,CAAyB,CAAC,CAACC,KAAD,CAAD,KAAa;AACrD;AACA,aAAOH,eAAe,CAACG,KAAK,CAACJ,cAAP,CAAtB;AACD,KAHgB,CAAjB;AAIAE,IAAAA,QAAQ,CAACG,OAAT,CAAiBN,GAAG,CAACO,OAArB,EALc,CAMd;;AACA,WAAO,MAAM;AACXJ,MAAAA,QAAQ,CAACK,UAAT;AACD,KAFD,CAPc,CAUd;AACD,GAXQ,EAWN,EAXM,CAAT;AAaA,SAAOP,cAAP;AACD,CAjBM","sourcesContent":["import { MutableRefObject, useEffect, useState } from 'react';\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nexport const useOnScreen = (ref: MutableRefObject<any>): boolean => {\r\n  const [isIntersecting, setIntersecting] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const observer = new IntersectionObserver(([entry]) => {\r\n      // console.log(entry);\r\n      return setIntersecting(entry.isIntersecting);\r\n    });\r\n    observer.observe(ref.current);\r\n    // Remove the observer as soon as the component is unmounted\r\n    return () => {\r\n      observer.disconnect();\r\n    };\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return isIntersecting;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}