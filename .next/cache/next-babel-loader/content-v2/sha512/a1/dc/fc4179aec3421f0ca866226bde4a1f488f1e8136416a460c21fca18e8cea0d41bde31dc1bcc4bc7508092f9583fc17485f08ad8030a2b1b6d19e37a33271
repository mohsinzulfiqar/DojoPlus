{"ast":null,"code":"/* eslint-disable @typescript-eslint/explicit-function-return-type */\n\n/* eslint-disable class-methods-use-this */\nimport { formattedResponse } from '../src/shared/utils/airtable-utils';\nimport { TABLES, getTableInstance } from './Airtable';\nconst table = getTableInstance(TABLES.SEMINARS);\n\nclass SeminarClassService {\n  /**\r\n   * @description - get private classes list against a specific user.\r\n   * @returns - Return private classes list against a specific user.\r\n   */\n  // eslint-disable-next-line @typescript-eslint/explicit-function-return-type\n  async getSeminars() {\n    try {\n      const records = await table.select().all();\n      return {\n        seminars: formattedResponse(records)\n      };\n    } catch (error) {\n      console.error(error);\n      throw error;\n    }\n  }\n\n}\n\nexport default new SeminarClassService();","map":{"version":3,"sources":["C:/Users/Public.DESKTOP-5K819ES/Documents/GitHub/dojoplus/services/SeminarsService.ts"],"names":["formattedResponse","TABLES","getTableInstance","table","SEMINARS","SeminarClassService","getSeminars","records","select","all","seminars","error","console"],"mappings":"AAAA;;AACA;AACA,SAASA,iBAAT,QAAkC,oCAAlC;AAEA,SAASC,MAAT,EAAiBC,gBAAjB,QAAyC,YAAzC;AAEA,MAAMC,KAAK,GAAGD,gBAAgB,CAACD,MAAM,CAACG,QAAR,CAA9B;;AAEA,MAAMC,mBAAN,CAA0B;AACxB;AACF;AACA;AACA;AAEE;AACA,QAAMC,WAAN,GAAoB;AAClB,QAAI;AACF,YAAMC,OAAY,GAAG,MAAMJ,KAAK,CAACK,MAAN,GAAeC,GAAf,EAA3B;AACA,aAAO;AACLC,QAAAA,QAAQ,EAAEV,iBAAiB,CAACO,OAAD;AADtB,OAAP;AAGD,KALD,CAKE,OAAOI,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACA,YAAMA,KAAN;AACD;AACF;;AAjBuB;;AAoB1B,eAAe,IAAIN,mBAAJ,EAAf","sourcesContent":["/* eslint-disable @typescript-eslint/explicit-function-return-type */\r\n/* eslint-disable class-methods-use-this */\r\nimport { formattedResponse } from '../src/shared/utils/airtable-utils';\r\n\r\nimport { TABLES, getTableInstance } from './Airtable';\r\n\r\nconst table = getTableInstance(TABLES.SEMINARS);\r\n\r\nclass SeminarClassService {\r\n  /**\r\n   * @description - get private classes list against a specific user.\r\n   * @returns - Return private classes list against a specific user.\r\n   */\r\n\r\n  // eslint-disable-next-line @typescript-eslint/explicit-function-return-type\r\n  async getSeminars() {\r\n    try {\r\n      const records: any = await table.select().all();\r\n      return {\r\n        seminars: formattedResponse(records),\r\n      };\r\n    } catch (error) {\r\n      console.error(error);\r\n      throw error;\r\n    }\r\n  }\r\n}\r\n\r\nexport default new SeminarClassService();\r\n"]},"metadata":{},"sourceType":"module"}