{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport React from 'react';\nimport { useRouter } from 'next/router';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport ListItemText from '@mui/material/ListItemText';\nimport { FixedSizeList } from 'react-window';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport AutoSizer from 'react-virtualized-auto-sizer';\nimport { useGetSchoolListQuery } from '../../shared/types/generated';\nexport const SchoolList = () => {\n  var _data$schoolsList, _data$schoolsList2;\n\n  const router = useRouter();\n  const {\n    data,\n    loading\n  } = useGetSchoolListQuery();\n  const list = (data === null || data === void 0 ? void 0 : (_data$schoolsList = data.schoolsList) === null || _data$schoolsList === void 0 ? void 0 : _data$schoolsList.items) || [];\n  const count = (data === null || data === void 0 ? void 0 : (_data$schoolsList2 = data.schoolsList) === null || _data$schoolsList2 === void 0 ? void 0 : _data$schoolsList2.count) || 0;\n\n  const renderRow = props => {\n    var _list$index3;\n\n    const {\n      index,\n      style\n    } = props;\n    return /*#__PURE__*/_jsx(ListItem, {\n      onClick: () => {\n        var _list$index;\n\n        if ((_list$index = list[index]) !== null && _list$index !== void 0 && _list$index.slug) {\n          var _list$index2;\n\n          router.push(`/school/${(_list$index2 = list[index]) === null || _list$index2 === void 0 ? void 0 : _list$index2.slug}/schedule`);\n        }\n      },\n      style: style,\n      disablePadding: true,\n      children: /*#__PURE__*/_jsx(ListItemButton, {\n        children: /*#__PURE__*/_jsx(ListItemText, {\n          primary: `${index} -- ${((_list$index3 = list[index]) === null || _list$index3 === void 0 ? void 0 : _list$index3.schoolName) || 'This school has no name'}`\n        })\n      })\n    }, index);\n  };\n\n  if (loading) {\n    return /*#__PURE__*/_jsx(CircularProgress, {});\n  }\n\n  return /*#__PURE__*/_jsx(AutoSizer, {\n    children: ({\n      height,\n      width\n    }) => /*#__PURE__*/_jsx(FixedSizeList, {\n      width: width,\n      height: height,\n      itemSize: 46,\n      itemCount: count,\n      children: renderRow\n    })\n  });\n};","map":null,"metadata":{},"sourceType":"module"}