{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/* eslint-disable react/require-default-props */\nimport React, { useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { appWithI18Next } from 'ni18n';\nimport GlobalStyles from '@mui/material/GlobalStyles';\nimport { UserProvider } from '@auth0/nextjs-auth0';\nimport { ThemeProvider } from '@mui/material/styles';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport { CacheProvider } from '@emotion/react';\nimport NextNprogress from 'nextjs-progressbar';\nimport { ni18nConfig } from '../../ni18n.config';\nimport { COLOR_BUTTON_RED } from '../shared/styles/colors';\nimport 'dayjs/locale/es';\nimport 'dayjs/locale/pt';\nimport { theme } from '../shared/styles/theme';\nimport { createEmotionCache } from '../shared/config/createEmotionCache';\nimport { ApolloProvider } from '../modules/apollo/ApolloProvider';\nimport '../shared/styles/globals.css';\nimport { initLanguage } from '../shared/utils/language-utils'; // Client-side cache, shared for the whole session of the user in the browser.\n\nconst clientSideEmotionCache = createEmotionCache();\n\n/**\r\n *\r\n * @param {AppProps} prop - Props.\r\n * @param {AppProps} prop.Component - Component.\r\n * @param {AppProps} prop.pageProps - PageProps.\r\n * @returns {JSX.Element} - Main app component.\r\n */\nfunction App({\n  Component,\n  pageProps,\n  emotionCache = clientSideEmotionCache\n}) {\n  const {\n    i18n\n  } = useTranslation();\n  useEffect(() => {\n    initLanguage({\n      i18n,\n      language: window.navigator.language\n    });\n  }, [i18n]);\n  return /*#__PURE__*/_jsx(CacheProvider, {\n    value: emotionCache,\n    children: /*#__PURE__*/_jsx(UserProvider, {\n      children: /*#__PURE__*/_jsx(ApolloProvider, {\n        children: /*#__PURE__*/_jsxs(ThemeProvider, {\n          theme: theme,\n          children: [/*#__PURE__*/_jsx(CssBaseline, {}), /*#__PURE__*/_jsx(GlobalStyles, {\n            styles: {\n              html: {\n                height: '100%'\n              },\n              body: {\n                height: '100%',\n                overflowY: 'scroll'\n              },\n              '#__next': {\n                height: '100%',\n                display: 'flex',\n                flexDirection: 'column'\n              }\n            }\n          }), /*#__PURE__*/_jsx(NextNprogress, {\n            color: COLOR_BUTTON_RED\n          }), /*#__PURE__*/_jsx(Component, _objectSpread({}, pageProps))]\n        })\n      })\n    })\n  });\n} // eslint-disable-next-line import/no-default-export\n\n\nexport default appWithI18Next(App, ni18nConfig);","map":null,"metadata":{},"sourceType":"module"}