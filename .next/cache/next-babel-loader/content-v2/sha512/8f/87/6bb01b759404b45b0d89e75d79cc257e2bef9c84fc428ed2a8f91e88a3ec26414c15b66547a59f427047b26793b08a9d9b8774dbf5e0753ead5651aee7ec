{"ast":null,"code":"/**\r\n * @description - get Profile after send page to browser.\r\n * @param url - Req.\r\n * @returns - Return user profile basic data like username and avatar.\r\n */\nasync function fetchGetJSON(url) {\n  try {\n    const data = await fetch(url).then(res => res.json());\n    return data;\n  } catch (err) {\n    throw new Error(err.message);\n  }\n}\n/**\r\n * @description - get Profile after send page to browser.\r\n * @param url - Req.\r\n * @param data - Res.\r\n * @returns - Return user profile basic data like username and avatar.\r\n */\n\n\nasync function fetchPostJSON(url, data) {\n  try {\n    // Default options are marked with *\n    const response = await fetch(url, {\n      method: 'POST',\n      // *GET, POST, PUT, DELETE, etc.\n      mode: 'cors',\n      // no-cors, *cors, same-origin\n      cache: 'no-cache',\n      // *default, no-cache, reload, force-cache, only-if-cached\n      credentials: 'same-origin',\n      // include, *same-origin, omit\n      headers: {\n        'Content-Type': 'application/json' // 'Content-Type': 'application/x-www-form-urlencoded',\n\n      },\n      redirect: 'follow',\n      // manual, *follow, error\n      referrerPolicy: 'no-referrer',\n      // no-referrer, *client\n      body: JSON.stringify(data || {}) // body data type must match \"Content-Type\" header\n\n    });\n    return await response.json(); // parses JSON response into native JavaScript objects\n  } catch (err) {\n    throw new Error(err.message);\n  }\n}\n\nexport { fetchGetJSON, fetchPostJSON };","map":null,"metadata":{},"sourceType":"module"}