{"ast":null,"code":"import Stripe from 'stripe';\nimport { CURRENCY, MIN_AMOUNT, MAX_AMOUNT } from '../../../../config';\nimport { formatAmountForStripe } from '../../../../utils/stripe-helpers';\nconst stripe = new Stripe(process.env.STRIPE_SECRET_KEY, {\n  // https://github.com/stripe/stripe-node#configuration\n  apiVersion: '2020-08-27'\n});\n/**\r\n * @description - Stripe submit handler.\r\n * @param req - Req.\r\n * @param res - Res.\r\n * @returns - Return response from stripe.\r\n */\n\nasync function handler(req, res) {\n  if (req.method === 'POST') {\n    const {\n      amount\n    } = req.body;\n\n    try {\n      // Validate the amount that was passed from the client.\n      if (!(amount >= MIN_AMOUNT && amount <= MAX_AMOUNT)) {\n        throw new Error('Invalid amount.');\n      } // Create PaymentIntent from body params.\n\n\n      const params = {\n        payment_method_types: ['card'],\n        amount: formatAmountForStripe(amount, CURRENCY),\n        currency: CURRENCY\n      };\n      const paymentIntent = await stripe.paymentIntents.create(params);\n      res.status(200).json(paymentIntent);\n    } catch (err) {\n      res.status(500).json({\n        statusCode: 500,\n        message: err.message\n      });\n    }\n  } else {\n    res.setHeader('Allow', 'POST');\n    res.status(405).end('Method Not Allowed');\n  }\n}\n\nexport default handler;","map":null,"metadata":{},"sourceType":"module"}