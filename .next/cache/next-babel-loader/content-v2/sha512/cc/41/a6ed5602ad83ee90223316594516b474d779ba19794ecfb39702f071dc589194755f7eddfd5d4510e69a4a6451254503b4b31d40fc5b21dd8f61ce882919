{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useState } from 'react';\nimport Map from './components/Map';\nimport Address from './components/Address';\nvar isBrowser = true;\nexport var Location = function Location(_ref) {\n  var name = _ref.name,\n      address = _ref.address,\n      city = _ref.city,\n      state = _ref.state;\n\n  var _useState = useState(0),\n      lat = _useState[0],\n      setLat = _useState[1];\n\n  var _useState2 = useState(0),\n      lng = _useState2[0],\n      setLng = _useState2[1];\n\n  var addressComplete = \"\".concat(address, \" \").concat(city, \" \").concat(state);\n\n  if (isBrowser) {\n    var geocoder = new window.google.maps.Geocoder();\n    geocoder.geocode({\n      address: addressComplete\n    }, function (results, status) {\n      if (status === google.maps.GeocoderStatus.OK) {\n        setLat(results[0].geometry.location.lat());\n        setLng(results[0].geometry.location.lng());\n      }\n    });\n  }\n\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(Map, {\n      id: \"myMap\",\n      options: {\n        fullscreenControl: false,\n        mapTypeControl: false,\n        streetViewControl: false,\n        center: {\n          lat: lat,\n          lng: lng\n        },\n        zoom: 17,\n        styles: []\n      },\n      onMapLoad: function onMapLoad(map) {\n        if (isBrowser) {\n          var marker = new window.google.maps.Marker({\n            position: {\n              lat: lat,\n              lng: lng\n            },\n            map: map,\n            title: name\n          });\n          return marker;\n        }\n\n        return null;\n      }\n    }), /*#__PURE__*/_jsx(Address, {\n      address: addressComplete,\n      lat: lat,\n      lng: lng\n    })]\n  });\n};","map":null,"metadata":{},"sourceType":"module"}