{"ast":null,"code":"import { ApolloClient, InMemoryCache, HttpLink } from '@apollo/client';\nimport { WORKSPACE_ENDPOINT, EIGHT_BASE_PUBLIC_TOKEN } from '../../shared/constants';\nimport { OnTokenEvent } from '../../shared/events/token-event';\n/**\r\n * @param {Function} getToken - Function to get the token.\r\n * @returns {object} Apollo client.\r\n */\n\nexport function createApolloClient(getToken) {\n  const httpLink = new HttpLink({\n    uri: WORKSPACE_ENDPOINT,\n    headers: {\n      authorization: `Bearer ${getToken()}`\n    }\n  });\n  const client = new ApolloClient({\n    uri: WORKSPACE_ENDPOINT,\n    link: httpLink,\n    cache: new InMemoryCache()\n  });\n  return client;\n}\nexport const client = createApolloClient(() => {\n  var _OnTokenEvent$get;\n\n  const token = ((_OnTokenEvent$get = OnTokenEvent.get()) === null || _OnTokenEvent$get === void 0 ? void 0 : _OnTokenEvent$get.token) || EIGHT_BASE_PUBLIC_TOKEN;\n  return token;\n});","map":{"version":3,"sources":["C:/Users/Public.DESKTOP-5K819ES/Documents/GitHub/dojoplus/src/modules/apollo/client.ts"],"names":["ApolloClient","InMemoryCache","HttpLink","WORKSPACE_ENDPOINT","EIGHT_BASE_PUBLIC_TOKEN","OnTokenEvent","createApolloClient","getToken","httpLink","uri","headers","authorization","client","link","cache","token","get"],"mappings":"AAAA,SACEA,YADF,EAEEC,aAFF,EAIEC,QAJF,QAKO,gBALP;AAMA,SACEC,kBADF,EAEEC,uBAFF,QAGO,wBAHP;AAIA,SAASC,YAAT,QAA6B,iCAA7B;AAEA;AACA;AACA;AACA;;AACA,OAAO,SAASC,kBAAT,CACLC,QADK,EAEgC;AACrC,QAAMC,QAAQ,GAAG,IAAIN,QAAJ,CAAa;AAC5BO,IAAAA,GAAG,EAAEN,kBADuB;AAE5BO,IAAAA,OAAO,EAAE;AACPC,MAAAA,aAAa,EAAG,UAASJ,QAAQ,EAAG;AAD7B;AAFmB,GAAb,CAAjB;AAOA,QAAMK,MAAM,GAAG,IAAIZ,YAAJ,CAAiB;AAC9BS,IAAAA,GAAG,EAAEN,kBADyB;AAE9BU,IAAAA,IAAI,EAAEL,QAFwB;AAG9BM,IAAAA,KAAK,EAAE,IAAIb,aAAJ;AAHuB,GAAjB,CAAf;AAKA,SAAOW,MAAP;AACD;AAED,OAAO,MAAMA,MAAM,GAAGN,kBAAkB,CAAC,MAAM;AAAA;;AAC7C,QAAMS,KAAK,GAAG,sBAAAV,YAAY,CAACW,GAAb,0EAAoBD,KAApB,KAA6BX,uBAA3C;AACA,SAAOW,KAAP;AACD,CAHuC,CAAjC","sourcesContent":["import {\r\n  ApolloClient,\r\n  InMemoryCache,\r\n  NormalizedCacheObject,\r\n  HttpLink,\r\n} from '@apollo/client';\r\nimport {\r\n  WORKSPACE_ENDPOINT,\r\n  EIGHT_BASE_PUBLIC_TOKEN,\r\n} from '../../shared/constants';\r\nimport { OnTokenEvent } from '../../shared/events/token-event';\r\n\r\n/**\r\n * @param {Function} getToken - Function to get the token.\r\n * @returns {object} Apollo client.\r\n */\r\nexport function createApolloClient(\r\n  getToken: () => string,\r\n): ApolloClient<NormalizedCacheObject> {\r\n  const httpLink = new HttpLink({\r\n    uri: WORKSPACE_ENDPOINT,\r\n    headers: {\r\n      authorization: `Bearer ${getToken()}`,\r\n    },\r\n  });\r\n\r\n  const client = new ApolloClient({\r\n    uri: WORKSPACE_ENDPOINT,\r\n    link: httpLink,\r\n    cache: new InMemoryCache(),\r\n  });\r\n  return client;\r\n}\r\n\r\nexport const client = createApolloClient(() => {\r\n  const token = OnTokenEvent.get()?.token || EIGHT_BASE_PUBLIC_TOKEN;\r\n  return token;\r\n});\r\n"]},"metadata":{},"sourceType":"module"}